<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>3 Pitfalls Everyone Should Avoid with Hybrid Multicloud (Part 4)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/2g23EWBuCB8/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-4.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Cloud Suite" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-3_pitfalls_everyone_should_avoid_with_hybrid_multicloud_part_4</id><updated>2018-07-23T05:00:09Z</updated><published>2018-07-23T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;a href="https://4.bp.blogspot.com/-uX_LEfg-y0Q/WqwSisY0z4I/AAAAAAAAsD4/YhckJvQSEhM3jgyy_zPAe0cUKsJh84-7QCLcBGAs/s1600/pitfalls.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img alt="three pitfalls" border="0" data-original-height="250" data-original-width="283" height="175" src="https://4.bp.blogspot.com/-uX_LEfg-y0Q/WqwSisY0z4I/AAAAAAAAsD4/YhckJvQSEhM3jgyy_zPAe0cUKsJh84-7QCLcBGAs/s200/pitfalls.png" title="" width="200" /&gt;&lt;/a&gt;&lt;br /&gt;The daily cloud hype is all around you, yet there are three pitfalls everyone should avoid.&lt;br /&gt;&lt;br /&gt;From cloud, hybrid cloud, to hybrid multicloud, you’re told this is the way to ensure a digital future for your business. These choices you’ve got to make don’t preclude the daily work of enhancing your customer's experience and agile delivery of those applications.&lt;br /&gt;&lt;br /&gt;Let's take a journey, looking closely at what hybrid multicloud means for your business. Let's examine the decisions being made when delivering applications and dealing with legacy applications. Likely these are some of the most important resources to your business.&lt;br /&gt;&lt;br /&gt;This article highlights three pitfalls everyone should be aware of when transitioning into hybrid multicloud environments. It's based on experiences from interactions with organizations working to conquer hybrid multicloud while delivering their solutions.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.schabell.org/2018/03/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-1.html" target="_blank"&gt;In part one&lt;/a&gt;, we covered the basic definitions to level the playing field. We outlined our views on hybrid cloud and multicloud, making sure to show the dividing lines between the two. This set the stage &lt;a href="http://www.schabell.org/2018/06/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-2.html#more" target="_blank"&gt;for part two&lt;/a&gt;, where the first pitfall discussed why cost is not always the obvious motivator for moving in to the cloud. Determining if moving all workloads in to the cloud is viable was explored in &lt;a href="http://www.schabell.org/2018/07/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-3.html" target="_blank"&gt;part three&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Finally, in part four we look at what to do with your data in the cloud. Should you move data in to the cloud? How much? What data in the cloud works and what is too much of a rick for the cloud?&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Data... data... data&lt;/h3&gt;The first thing about cloud and data, the crucial factor to all your decisions, is determining your bandwidth and storage needs.&lt;br /&gt;&lt;br /&gt;&lt;a href="https://1.bp.blogspot.com/-5vnIvMUbf8s/Wz4h5VF5fqI/AAAAAAAAs4c/cc3S4F95xCoZU_0beOX4Ecxan2BFb1kOACLcBGAs/s1600/data-data-data.jpg" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="three pitfalls" border="0" data-original-height="1000" data-original-width="1600" height="200" src="https://1.bp.blogspot.com/-5vnIvMUbf8s/Wz4h5VF5fqI/AAAAAAAAs4c/cc3S4F95xCoZU_0beOX4Ecxan2BFb1kOACLcBGAs/s320/data-data-data.jpg" title="" width="320" /&gt;&lt;/a&gt;A recent &lt;a href="http://www.businessinsider.com/companies-waste-62-billion-on-the-cloud-by-paying-for-storage-they-dont-need-according-to-a-report-2017-11" target="_blank"&gt;article stated that&lt;/a&gt;, "Based on Gartner's projection that data storage will be a $173 billion business in 2018." This has caught your attention as you're looking to push workloads and storage in to the cloud.&lt;br /&gt;&lt;br /&gt;The article goes even further to state that, "Companies globally could save $62 billion in IT costs just by optimizing their workloads.” After reading the previous articles in this series, you should not be surprised at this statement. What is surprising follows when they state that, “Only 25% of companies would save money if they transferred their server data directly onto the cloud.”&lt;br /&gt;&lt;br /&gt;Wait a minute, work loads can be optimized for the cloud, but only a small percentage of companies would save on data in the cloud?&lt;br /&gt;&lt;br /&gt;If you consider that cloud providers often charge rates based on bandwidth, moving your data from on premise to the cloud quickly becomes a cost burden you don't want to carry. Putting data in the cloud is a rare occurrence, usually something like this:&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;A single cloud with storage and applications&lt;/li&gt;&lt;li&gt;Applications in cloud with storage on premise&lt;/li&gt;&lt;li&gt;Applications in the cloud and their data cached in cloud, storage on premise&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;div&gt;In the first bandwidth costs are reduced by keeping everything inside a single cloud vendor, which we know is simply lock-in and often not part of a CIO's cloud strategy or risk prevention.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The second only keeps data in the cloud that applications collect and transports out the minimum down to on premise storage. This creates a carefully considered strategy of only deploying data minimalistic applications in a cloud.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The last example is where data is cached in the cloud with applications and storage of that data, or the one truth, is stored on premise. This means analytics, AI and machine learning can be run on premise without having to upload to cloud providers and then back again after processing. The cached data is based only on application needs and can even be cached across multicloud deployments.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;a href="https://1.bp.blogspot.com/-Epf7DznuB6M/Wz4iCzNQYqI/AAAAAAAAs4g/fI7gWT4vh-0uxjUmh5BoWFyX3hMEToGQgCLcBGAs/s1600/security-hole.jpg" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="three pitfalls" border="0" data-original-height="435" data-original-width="580" height="240" src="https://1.bp.blogspot.com/-Epf7DznuB6M/Wz4iCzNQYqI/AAAAAAAAs4g/fI7gWT4vh-0uxjUmh5BoWFyX3hMEToGQgCLcBGAs/s320/security-hole.jpg" title="" width="320" /&gt;&lt;/a&gt;Amsterdam Airport Schiphol &lt;a href="https://www.redhat.com/en/resources/amsterdam-airport-schiphol-case-study" target="_blank"&gt;case study is available online&lt;/a&gt;&amp;nbsp;and discusses their data, cloud and deployment strategies across a hybrid multicloud environment.&lt;/div&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Data dangers&lt;/h3&gt;Most companies realize all to well that their data is their proprietary advantage in their market. It's their intellectual capital at the end of the day and something they've thought very carefully about in regards to where it's going to be stored.&lt;br /&gt;&lt;br /&gt;Imagine this scenario if you will.&lt;br /&gt;&lt;br /&gt;You’re a retailer, one of the top ten worldwide. You've been planning your cloud strategy for some time now and have landed on making use of Amazon's cloud services. All of a sudden,&amp;nbsp;&lt;a href="https://www.forbes.com/sites/ciocentral/2017/06/23/amazon-buys-whole-foods-now-what-the-story-behind-the-story/#33e9cc6be898" target="_blank"&gt;Amazon buys Whole Foods&lt;/a&gt;&amp;nbsp;and is moving into your market.&lt;br /&gt;&lt;br /&gt;Overnight Amazon is now grown to 50% of your retail size. Do you trust their cloud with your retail data? What do you do if you already have your data in their cloud? Did your cloud planning start with&amp;nbsp;having an exit-strategy?&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Pitfalls shared, pitfalls avoided&lt;/h3&gt;Sharing just a few of the pitfalls we have seen in our travels should help your company plan for a safer, more secure and persistent cloud strategy. Understanding that &lt;a href="http://www.schabell.org/2018/06/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-2.html#more" target="_blank"&gt;cost is not the obvious motivator&lt;/a&gt;, that &lt;a href="http://www.schabell.org/2018/07/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-3.html" target="_blank"&gt;not everything needs or should be put in the cloud&lt;/a&gt;, and managing your data effectively in the cloud are all key factors to ensuring success.&lt;br /&gt;&lt;br /&gt;Missing the start of this series? Just head on back and &lt;a href="http://www.schabell.org/2018/03/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-1.html" target="_blank"&gt;catch up with part 1&lt;/a&gt;.&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xxDXx5r1ZGw:UnersmutHsU:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xxDXx5r1ZGw:UnersmutHsU:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xxDXx5r1ZGw:UnersmutHsU:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=xxDXx5r1ZGw:UnersmutHsU:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xxDXx5r1ZGw:UnersmutHsU:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=xxDXx5r1ZGw:UnersmutHsU:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xxDXx5r1ZGw:UnersmutHsU:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=xxDXx5r1ZGw:UnersmutHsU:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xxDXx5r1ZGw:UnersmutHsU:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xxDXx5r1ZGw:UnersmutHsU:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=xxDXx5r1ZGw:UnersmutHsU:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/xxDXx5r1ZGw" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/2g23EWBuCB8" height="1" width="1" alt=""/&gt;</content><summary>The daily cloud hype is all around you, yet there are three pitfalls everyone should avoid. From cloud, hybrid cloud, to hybrid multicloud, you’re told this is the way to ensure a digital future for your business. These choices you’ve got to make don’t preclude the daily work of enhancing your customer's experience and agile delivery of those applications. Let's take a journey, looking closely at ...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2018-07-23T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/xxDXx5r1ZGw/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-4.html</feedburner:origLink></entry><entry><title>Hibernate Community Newsletter 14/2018</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/U8AvdK23Ljg/" /><category term="Discussions" scheme="searchisko:content:tags" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="Hibernate ORM" scheme="searchisko:content:tags" /><category term="newsletter" scheme="searchisko:content:tags" /><author><name>Vlad Mihalcea</name></author><id>searchisko:content:id:jbossorg_blog-hibernate_community_newsletter_14_2018</id><updated>2018-07-23T08:48:20Z</updated><published>2018-07-23T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Welcome to the Hibernate community newsletter in which we share blog posts, forum, and StackOverflow questions that are especially relevant to our users.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="articles"&gt;&lt;a class="anchor" href="#articles"&gt;&lt;/a&gt;Articles&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you want to call SQL functions from the &lt;code&gt;SELECT&lt;/code&gt; clause of a JPQL or Criteria API queries, then you should register the function as otherwise, the entity query will not compile. For more details about the best way to register such SQL function, check out &lt;a href="https://vladmihalcea.com/hibernate-sql-function-jpql-criteria-api-query/"&gt;this article&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;a href="https://www.codesod.com/2018/04/jpa-tips-avoiding-n-1-select-problem.html"&gt;This article&lt;/a&gt; shows that collection EAGER fetching can lead to N+1 query problems. However, this can happen not only to entity collections. You can bump into this issue with &lt;code&gt;@ManyToOne&lt;/code&gt; or &lt;code&gt;@OneToOne&lt;/code&gt; associations as well since they are fetched eagerly by default too. The best way to address the N+1 query issue is to detect it automatically during testing, as explained &lt;a href="https://vladmihalcea.com/how-to-detect-the-n-plus-one-query-problem-during-testing/"&gt;in this article&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For our Russian readers, there is &lt;a href="https://habr.com/post/416851/"&gt;a very good article on Habr&lt;/a&gt; which addresses many topics that are very useful when using JPA and Hibernate.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you want to customize the default mapping between JPA entities and database columns, you can use a custom naming strategy. &lt;a href="https://www.devglan.com/hibernate/hibernate-naming-strategy"&gt;This article&lt;/a&gt; explains how you can do that with both Hibernate 4 and 5.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you are using Hazelcast as a Hibernate 2nd-level cache provider, and you are running on Java 10, check out &lt;a href="https://dzone.com/articles/migrate-hibernate-caching-with-hazelcast-in-java-1"&gt;this article&lt;/a&gt; for how to set up your project dependencies in Maven so that everything works properly.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Java Magazine features &lt;a href="http://www.javamagazine.mozaicreader.com/MayJune2018/Twitter#&amp;amp;pageSet=27&amp;amp;page=0&amp;amp;contentItem=0"&gt;one article&lt;/a&gt; about some design patterns to consider when using JPA and Hibernate.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="time-to-upgrade"&gt;&lt;a class="anchor" href="#time-to-upgrade"&gt;&lt;/a&gt;Time to upgrade&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you are using Hibernate Validator 6.0, you might want to upgrade to the &lt;a href="http://in.relation.to/2018/07/18/hibernate-validator-6011-final-out/"&gt;6.0.11&lt;/a&gt; version which comes with improved compatibility with JDK 11 and a couple of bug fixes.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="questions-and-answers"&gt;&lt;a class="anchor" href="#questions-and-answers"&gt;&lt;/a&gt;Questions and answers&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/association-between-independent-entities/1078"&gt;How to map an association between independent entities&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/collections-are-not-able-to-access-in-reference-variable/1082"&gt;Parent-side Hibernate collection does not contain any child record&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/how-to-fetch-one-side-of-a-many-to-many-association-while-filtering-the-other-using-hibernate/1095"&gt;How to fetch one side of a many-to-many association while filtering the other using Hibernate&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/how-to-change-hibernate-schema-at-run-time/1093"&gt;How to change the Hibernate database schema at runtime&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/11431670/how-can-i-avoid-the-warning-firstresult-maxresults-specified-with-collection-fe/46195656#46195656"&gt;How can I avoid the Warning “firstResult/maxResults specified with collection fetch; applying in memory!”?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/12346845/registering-a-sql-function-with-jpa-and-hibernate/51285944?stw=2#51285944"&gt;Registering a SQL function with JPA and Hibernate&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/7349464/bulk-insert-or-update-with-hibernate/51324134#51324134"&gt;Bulk insert or update with Hibernate?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/25362831/solve-hibernate-lazy-init-issue-with-hibernate-enable-lazy-load-no-trans/39723142#39723142"&gt;Solve Hibernate Lazy-Init issue with hibernate.enable_lazy_load_no_trans&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/23923886/jpa-lazy-fetch-not-working-and-throwing-lazyinitializationexception/23927111#23927111"&gt;JPA lazy fetch not working and throwing LazyInitializationException&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/34588354/difference-between-size-length-and-columnlength-value/34589474#34589474"&gt;Difference between &lt;code&gt;@Size&lt;/code&gt;, &lt;code&gt;@Length&lt;/code&gt; and &lt;code&gt;@Column(length=value)&lt;/code&gt; when using JPA and Hibernate&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/31725820/hql-returning-timestamp-for-given-timezone/31741171#31741171"&gt;How to return a timestamp for given timezone using HQL&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/39915906/how-to-update-only-a-part-of-all-entity-attributes-with-hibernate/39917954#39917954"&gt;How to update only a part of all entity attributes with Hibernate&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/1607532/when-to-use-entitymanager-find-vs-entitymanager-getreference-with-jpa/50945279#50945279"&gt;When to use EntityManager.find() vs EntityManager.getReference() with JPA&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/U8AvdK23Ljg" height="1" width="1" alt=""/&gt;</content><summary>Welcome to the Hibernate community newsletter in which we share blog posts, forum, and StackOverflow questions that are especially relevant to our users. Articles If you want to call SQL functions from the SELECT clause of a JPQL or Criteria API queries, then you should register the function as otherwise, the entity query will not compile. For more details about the best way to register such SQL f...</summary><dc:creator>Vlad Mihalcea</dc:creator><dc:date>2018-07-23T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/07/23/hibernate-community-newsletter-2018-14/</feedburner:origLink></entry><entry><title>Enterprise Integration for Ethereum</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/4O4aBflD8js/enterprise-integration-for-ethereum.html" /><category term="Blockchain" scheme="searchisko:content:tags" /><category term="Camel" scheme="searchisko:content:tags" /><category term="Ethereum" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_ofbizian" scheme="searchisko:content:tags" /><category term="integration" scheme="searchisko:content:tags" /><author><name>Bilgin Ibryam</name></author><id>searchisko:content:id:jbossorg_blog-enterprise_integration_for_ethereum</id><updated>2018-07-21T09:26:22Z</updated><published>2018-07-21T09:02:00Z</published><content type="html">&lt;div class="graf graf--p graf-after--h3" id="da0c" name="da0c"&gt;&lt;i&gt;If you prefer, read the same post on &lt;a href="https://medium.com/@bibryam/enterprise-integration-for-ethereum-fa67a1577d43" target="_blank"&gt;Medium&lt;/a&gt;. &lt;/i&gt;&lt;/div&gt;&lt;div class="graf graf--p graf-after--h3" id="da0c" name="da0c"&gt;The most popular open source Java integration library —&lt;a class="markup--anchor markup--p-anchor" data-href="http://camel.apache.org/" href="http://camel.apache.org/" rel="noopener nofollow" target="_blank"&gt; Apache Camel &lt;/a&gt;supports Ethereum’s JSON-RPC API now.&lt;/div&gt;&lt;h3&gt;The Ethereum Ecosystem&lt;/h3&gt;Ethereum is an open source, public, blockchain platform for running smart contracts. It provides a decentralized Turing-complete virtual machine that can execute scripts and a cryptocurrency used to compensate participant mining nodes for computations performed or to mitigate spam. Today, Ethereum is one of the most established and mature blockchain platforms with interests from small and large companies, nonprofit organizations and governments. There is a lot that can be said about Ethereum ecosystem and the pace it moves with. But the facts talk for themselves, Ethereum has the momentum and all the indications of a technology with a potential:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Ethereum has an order of magnitude more active &lt;b&gt;developers&lt;/b&gt; than any other blockchain platform and as dictated by the &lt;a href="https://en.wikipedia.org/wiki/Metcalfe%27s_law" title="Metcalfe's law"&gt;Metcalfe's law&lt;/a&gt;, this gap widens day by the&amp;nbsp;day. Ethereum coding school CryptoZombies has over &lt;span class="markup--strong markup--p-strong"&gt;200K users,&lt;/span&gt; Truffle development framework has over half a million &lt;a href="https://media.consensys.net/the-state-of-the-ethereum-network-949332cb6895" target="_blank"&gt;downloads&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;The Ethereum platform has the richest &lt;b&gt;tools &lt;/b&gt;and&lt;b&gt; &lt;/b&gt;infrastructure ecosystem for building decentralized applications: &lt;a class="markup--anchor markup--p-anchor" data-href="http://truffleframework.com/" href="http://truffleframework.com/" rel="nofollow noopener" target="_blank"&gt;Truffle&lt;/a&gt;, &lt;a class="markup--anchor markup--p-anchor" data-href="https://infura.io/" href="https://infura.io/" rel="nofollow noopener" target="_blank"&gt;Infura&lt;/a&gt;, &lt;a class="markup--anchor markup--p-anchor" data-href="https://github.com/ethereum/web3.js/" href="https://github.com/ethereum/web3.js/" rel="nofollow noopener" target="_blank"&gt;Web3.js&lt;/a&gt;, &lt;a class="markup--anchor markup--p-anchor" data-href="https://openzeppelin.org/" href="https://openzeppelin.org/" rel="nofollow noopener" target="_blank"&gt;OpenZeppelin&lt;/a&gt;, &lt;a class="markup--anchor markup--p-anchor" data-href="https://github.com/ethereum/go-ethereum/wiki/geth" href="https://github.com/ethereum/go-ethereum/wiki/geth" rel="nofollow noopener" target="_blank"&gt;Geth&lt;/a&gt;, &lt;a href="https://github.com/paritytech/parity" target="_blank"&gt;Parity&lt;/a&gt;, &lt;a class="markup--anchor markup--p-anchor" data-href="http://truffleframework.com/ganache/" href="http://truffleframework.com/ganache/" rel="nofollow noopener" target="_blank"&gt;Ganache&lt;/a&gt;, &lt;a class="markup--anchor markup--p-anchor" data-href="https://metamask.io/" href="https://metamask.io/" rel="nofollow noopener" target="_blank"&gt;MetaMask&lt;/a&gt;, &lt;a class="markup--anchor markup--p-anchor" data-href="https://cryptozombies.io/" href="https://cryptozombies.io/" rel="nofollow noopener" target="_blank"&gt;CryptoZombies&lt;/a&gt;, &lt;a class="markup--anchor markup--p-anchor" data-href="https://mycrypto.com/" href="https://mycrypto.com/" rel="nofollow noopener" target="_blank"&gt;MyCrypto&lt;/a&gt;, &lt;a class="markup--anchor markup--p-anchor" data-href="http://etherscan.io/" href="http://etherscan.io/" rel="nofollow noopener" target="_blank"&gt;Etherscan&lt;/a&gt;, &lt;a class="markup--anchor markup--p-anchor" data-href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md" href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md" rel="nofollow noopener" target="_blank"&gt;ERC20&lt;/a&gt; (for ICOs), etc.&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;The cloud platforms &lt;/b&gt;Amazon Web Services and Microsoft Azure offer services for one-click Ethereum infrastructure deployment and management.&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;The Ethereum technology has the interest of &lt;b&gt;enterprise&lt;/b&gt; software companies. Customized Ethereum-based applications are being developed and experimented by financial institutions such as JPMorgan Chase,&lt;sup&gt; &lt;/sup&gt;Deloitte, R3,&lt;sup&gt; &lt;/sup&gt;Innovate UK,&amp;nbsp; Barclays, UBS, Credit Suisse and many others. One of the best known in this area is the J. P. Morgan Chase developed permissioned of Ethereum blockchain called &lt;a href="https://github.com/jpmorganchase/quorum/" target="_blank"&gt;Quorum.&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;In 2017, &lt;span class="mw-headline" id="Enterprise_Ethereum_Alliance_(EEA)"&gt;&lt;b&gt;Enterprise Ethereum Alliance &lt;/b&gt;(&lt;a href="https://entethalliance.org/" target="_blank"&gt;EEA&lt;/a&gt;) was setup up &lt;/span&gt;by various blockchain start-ups, Fortune 500 companies, research groups and others with the aim to help adoption of Ethereum based technology. It provides standards, resources for businesses to learn about Ethereum and leverage this groundbreaking technology to address specific industry use cases.&lt;/li&gt;&lt;/ul&gt;&lt;div class="mission__text"&gt;Ethereum has passed the moment when it was a hipster technology or a scientific experiment, and now it is a fundamental open source decentralization technology that enterprise companies are looking into. Talking about open source and the enterprise, I thought I also do my tiny piece of contribution to the Ethereum ecosystem and help for its adoption. Let's see what is it.&lt;/div&gt;&lt;h3&gt;Open Source Enterprise Integration&lt;/h3&gt;Ethereum is distributed and decentralized, but it is mostly a closed system with the embedded ledger, the currency, and the executing nodes. In order to be useful for the enterprise, Ethereum has to be well integrated with existing legacy and new systems. Luckily, Ethereum offers a robust and lightweight &lt;a href="http://www.jsonrpc.org/specification" rel="nofollow"&gt;JSON-RPC&lt;/a&gt; API with a good support for the JavaScript language. But in the enterprise companies, JavaScript is not the primary choice for integration, it is rather Java followed by .Net. Java is not necessary lightweight or fast evolving, but it has a huge developer community and a mature library ecosystem making it the top choice for the majority of enterprise companies. The main factor contributing to the productivity of the Java language is the reuse of existing libraries and avoiding reinventing the wheel. One of the most popular libraries enabling reuse and avoiding reinventing the wheel for integration is &lt;a href="http://camel.apache.org/" target="_blank"&gt;Apache Camel&lt;/a&gt;. Luckily, Camel happens to be my passion and a project I have been contributing for many years, so connecting the two was the most natural thing for me to do.&lt;br /&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-8gbuqBSBvQE/W0-j4ulPSDI/AAAAAAAALJM/QIv9OXLKCXcbc2p8nm0O6iXg7H9ZJaengCLcBGAs/s1600/Screen%2BShot%2B2018-07-18%2Bat%2B21.31.46.png" style="margin-left: auto; margin-right: auto;"&gt;&lt;img alt="Apache Camel building blocks" border="0" data-original-height="643" data-original-width="1600" height="256" src="https://2.bp.blogspot.com/-8gbuqBSBvQE/W0-j4ulPSDI/AAAAAAAALJM/QIv9OXLKCXcbc2p8nm0O6iXg7H9ZJaengCLcBGAs/s640/Screen%2BShot%2B2018-07-18%2Bat%2B21.31.46.png" title="Apache Camel building blocks" width="640" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Building blocks of Apache Camel&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;For those who are coming from a blockchain background and are not familiar with Camel, here is a very brief intro. Apache Camel is a lightweight open source integration library that is composed conceptually of three parts:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Implementations of the widely used &lt;a href="https://www.enterpriseintegrationpatterns.com/patterns/messaging/index.html"&gt;Enterprise Integration Patterns&lt;/a&gt; (EIPs). (Notice this are not &lt;span class="col-11 text-gray-dark mr-2"&gt;Ethereum Improvement Proposal that &lt;/span&gt;shares the same acronym.) EIPs provide a common notation, language and definition of the concepts in the enterprise integration space (think of publish-subscribe, dead letter channel, content-based router, filter, splitter, aggregator, throttler, retry, circuit breaker, etc.). Some of these patterns have been around for over a decade and some are new, but they are well known by anyone doing messaging and distributed system integration for a living.&lt;/li&gt;&lt;li&gt;The second major part of Apache Camel is the huge &lt;a href="https://github.com/apache/camel/tree/master/components"&gt;connectors&lt;/a&gt; library. Basically, as long as there is a Java library for a protocol, system endpoint, SaaS API, most likely there is a Camel connector for it (think of HTTP, JMS, SOAP, REST, AWS SQS, DropBox, Twitter, and now Ethereum, etc). Connectors abstract away the complexity of configuring the different libraries and provide a unified URI based approach for connecting to all kind of systems.&lt;/li&gt;&lt;li&gt;And the last piece of Apache Camel is the Domain Specific Language (DSL) that wires together connectors and EIPs in a higher level integration focused language. The DSL, combined with connectors and patterns makes developers highly productive in connecting systems and creates solutions that are industry standard and easier to maintain for long periods. All these are characteristics that are important for enterprise companies looking to create modern solutions based on mature technology.&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;/ul&gt;Companies are more integrated than ever, the systems within the companies are more integrated than ever. And if you are a Java shop, most likely there is already some Apache Camel based integration in use somewhere in the organization. Now you can use Camel and all the capabilities it provides also to talk to Ethereum.&lt;br /&gt;&lt;h3&gt;Apache Camel Connector for Ethereum&lt;/h3&gt;The natural intersection of the two technologies is a Camel connector for Ethereum. Such a connector would allow integrating Ethereum with any other system, interaction style, and protocol. For that purpose, I evaluated the existing Java libraries for Ethereum and came to the conclusion that &lt;a href="http://web3j.io/" target="_blank"&gt;web3j&lt;/a&gt; is the right fit for this use case. Web3j is an actively developed, feature rich, Java library for interacting with Ethereum compatibles nodes over JSON-RPC. &lt;a href="https://github.com/apache/camel/blob/master/components/camel-web3j/src/main/docs/web3j-component.adoc" target="_blank"&gt;Camel-web3j&lt;/a&gt; connector (the technical name for the Camel Ethereum connector) is a thin wrapper that gives an easy way to use the capabilities offered by web3j from Apache Camel DSL. Currently, the connector offers the following features:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Works with &lt;a href="https://github.com/ethereum/go-ethereum" target="_blank"&gt;Geth&lt;/a&gt;, &lt;a href="https://github.com/paritytech/parity" target="_blank"&gt;Parity&lt;/a&gt;, &lt;a href="https://truffleframework.com/ganache" target="_blank"&gt;Ganache&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Support for &lt;a href="https://infura.io/" rel="" target="_blank"&gt;Infura&lt;/a&gt; API.&lt;/li&gt;&lt;li&gt;Support for JP Morgan's &lt;a href="https://github.com/jpmorganchase/quorum/" target="_blank"&gt;Quorum&lt;/a&gt; API.&lt;/li&gt;&lt;li&gt;Support for &lt;a href="https://github.com/ethereum/wiki/wiki/JSON-RPC" target="_blank"&gt;JSON-RPC&lt;/a&gt; API over HTTP and IPC.&lt;/li&gt;&lt;li&gt;Implementation of all web3, net, eth, shh operations.&lt;/li&gt;&lt;li&gt;Support for &lt;a href="https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_newfilter" target="_blank"&gt;filters&lt;/a&gt;.&amp;nbsp;&lt;/li&gt;&lt;li&gt;Support for &lt;a href="https://ens.domains/" rel="" target="_blank"&gt;Ethereum Name Service (ENS)&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Fully unit and integration tested (over 100 and growing).&lt;/li&gt;&lt;/ul&gt;The full power of this integration comes not from the connector features, but when the connector is used together with the other connectors, patterns and all other Camel capabilities to provide a complete integration framework around Ethereum.&lt;br /&gt;&lt;br /&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-nx6QHiAdK60/W05qCPo08yI/AAAAAAAALJA/i6Ef3kgy6yYeO-Aa-oJrWCgCx7ALXcZNACLcBGAs/s1600/Screen%2BShot%2B2018-07-17%2Bat%2B22.55.13.png" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="675" data-original-width="1600" height="265" src="https://2.bp.blogspot.com/-nx6QHiAdK60/W05qCPo08yI/AAAAAAAALJA/i6Ef3kgy6yYeO-Aa-oJrWCgCx7ALXcZNACLcBGAs/s640/Screen%2BShot%2B2018-07-17%2Bat%2B22.55.13.png" width="640" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Ethereum compatible JSON-RPC APIs&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;Next, I'm going to focus on adding support for Parity's &lt;a href="https://github.com/paritytech/parity/wiki/JSONRPC-personal-module"&gt;Personal&lt;/a&gt;, and Geth's &lt;a href="https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal"&gt;Personal&lt;/a&gt; client API, Ethereum wallet support, and others. The aim is to keep the component up-to-date with the web3j capabilities that are useful in system-to-system integration scenarios with Apache Camel. The connector is &lt;a href="https://github.com/apache/camel/commit/ef2bbb8799b83c70b0b8c267e7da0042d59f7e3b" target="_blank"&gt;pushed&lt;/a&gt; to Apache Camel 2.22 and ready for early adopters to give it a try and provide feedback. To get started, have a look at the unit tests to discover how each operation is configured, and the integration tests to see how to connect to Ganache or Ethereum mainnet, etc. Enjoy.&lt;br /&gt;&lt;h3&gt;Use Cases for Apache Camel&lt;/h3&gt;Bellow is the Enterprise Ethereum Architecture Stack (EEAS) which represents a conceptual framework of the common layers and components of an Enterprise Ethereum (EE) application according to the client &lt;a href="https://entethalliance.org/resources/"&gt;specification&lt;/a&gt; v1.0.&lt;br /&gt;&lt;br /&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-Czd6QIbRsUM/W05aIPug2KI/AAAAAAAALIc/tMqi2zCPHH8AHdIKq4ifN10zozP27JbQgCLcBGAs/s1600/eea.png" style="margin-left: auto; margin-right: auto;"&gt;&lt;img alt="Enterprise Ethereum Architecture Stack" border="0" data-original-height="1253" data-original-width="1600" height="311" src="https://1.bp.blogspot.com/-Czd6QIbRsUM/W05aIPug2KI/AAAAAAAALIc/tMqi2zCPHH8AHdIKq4ifN10zozP27JbQgCLcBGAs/s400/eea.png" title="Enterprise Ethereum Architecture Stack" width="400" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Enterprise Ethereum Architecture Stack&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;If you wonder where exactly Camel fits here, Camel-web3j is part of the tooling layer as an integration library with a focus on system-to-system integration. It uses the public Ethereum JSON-RPC API, which any Enterprise Ethereum compatible implementation must support and keep backward compatible with.&lt;br /&gt;Then, Camel would primarily be used to interact with services that are external to Ethereum but trusted by the smart contracts (so-called Oracles). In a similar manner, Camel can be used to interact with Enterprise Management Systems to send alerts and metrics, report faults, change configurations, etc.&lt;br /&gt;&lt;br /&gt;The main use cases I can think of for this connector are:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Listen for new blocks, events, happening in the Ethereum network, filter, transform, enrich and publish them into other systems. For example listen for new blocks, retrieving its transactions, filter out uninteresting ones, enriching others, and process them. That can be done using Ethereum node filters capabilities, or purely with Camel, using polling consumers to query a node periodically and idempotent filters to prevent processing previously processed blocks, etc.&lt;/li&gt;&lt;li&gt;The other use case would be, to listen for events and commands coming from an enterprise system (maybe a step in the business process) and then tell the Ethereum network about it. For example, a KYC is approved or payment is received in one system, which causes Camel to talk to the second system and retrieve a user's ERC20 address and perform an Ethereum transaction.&lt;/li&gt;&lt;/ul&gt;Real world uses of Camel would involve a more complex mixture of the above scenarios ensuring high availability, resilience, replay, auditing, etc, in which Camel is really good at.&lt;br /&gt;&lt;h3&gt;Ethereum Oracle Implemented in Apache Camel&lt;/h3&gt;&lt;i&gt;"Talk is cheap. Show me the code."&lt;/i&gt; - Linus Torvalds&lt;br /&gt;&lt;br /&gt;In many occasions, smart contracts need information from the real world to operate. An oracle is, simply put, a smart contract that is able to interact with the outside world. The demonstrate the usage of Camel-web3j, I created a Camel route that represents an oracle. The route listens for &lt;i&gt;CallbackGetBTCCap&lt;/i&gt; events on a specific topic, and when such an event is received, the Camel route generates a random value and passes it to the same contract by calling &lt;i&gt;setBTCCap&lt;/i&gt; method. That is basically a "Hello world!" the Ethereum way.&lt;br /&gt;&lt;br /&gt;To trigger the event, you can call &lt;i&gt;updateBTCCap&lt;/i&gt; method on the smart contract using the following unit test:&lt;br /&gt;&lt;blockquote class="tr_bq"&gt;mvn test -Dtest=CamelOracleRouteTest#updateBTCCap&lt;/blockquote&gt;To check the current price in the contract, you can call &lt;i&gt;getBTCCap&lt;/i&gt; method on the smart contract using the following unit test:&lt;br /&gt;&lt;blockquote class="tr_bq"&gt;mvn test -Dtest=CamelOracleRouteTest#getBTCCap&lt;/blockquote&gt;Check the full instructions, the smart contract, Camel routes on &lt;a href="https://github.com/bibryam/camel-ethereum-oracle"&gt;Github&lt;/a&gt; and try it for yourself. If you use the component and have questions or feedback, if you like this and you are interested from implementing Camel connector for other blockchain projects, reach out. Take care. eth tips jar: 0x6fc1bF6A69B92C444772aCE4CB040705Afd255bD&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/4O4aBflD8js" height="1" width="1" alt=""/&gt;</content><summary>If you prefer, read the same post on Medium. The most popular open source Java integration library — Apache Camel supports Ethereum’s JSON-RPC API now. The Ethereum EcosystemEthereum is an open source, public, blockchain platform for running smart contracts. It provides a decentralized Turing-complete virtual machine that can execute scripts and a cryptocurrency used to compensate participant mini...</summary><dc:creator>Bilgin Ibryam</dc:creator><dc:date>2018-07-21T09:02:00Z</dc:date><feedburner:origLink>http://www.ofbizian.com/2018/07/enterprise-integration-for-ethereum.html</feedburner:origLink></entry><entry><title>Easy Workitem installation (jBPM WorkItem Repository)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/FIA0kDAtFJs/easy-workitem-installation-jbpm.html" /><category term="feed_group_name_jbossjbpmcommunity" scheme="searchisko:content:tags" /><category term="feed_name_swiderskimaciej" scheme="searchisko:content:tags" /><author><name>Tihomir Surdilovic</name></author><id>searchisko:content:id:jbossorg_blog-easy_workitem_installation_jbpm_workitem_repository</id><updated>2018-07-19T18:32:25Z</updated><published>2018-07-19T18:32:00Z</published><content type="html">We added the ability to install workitems hosted by the&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/kiegroup/jbpm-work-items"&gt;jBPM Workitem Repository&lt;/a&gt;&amp;nbsp;on any running KIE Worbench instance directly from the repository. itself This lifts some limitations of installing workitems which was so far only possible from within process editors inside each running workbench. It also allows for future integrations with other runtime systems that can take advantage of the hosted workitems.&lt;br /&gt;&lt;br /&gt;When browsing workitems inside the repository you will now find the "Install" column:&lt;br /&gt;&lt;br /&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-mDTW9lVuo6E/W1DTCPKgpXI/AAAAAAAAhF4/wHs-9RA641sjydFUgEfCouV3MM5nu6KBgCLcBGAs/s1600/Screen%2BShot%2B2018-07-19%2Bat%2B2.14.12%2BPM.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="808" data-original-width="1600" height="201" src="https://2.bp.blogspot.com/-mDTW9lVuo6E/W1DTCPKgpXI/AAAAAAAAhF4/wHs-9RA641sjydFUgEfCouV3MM5nu6KBgCLcBGAs/s400/Screen%2BShot%2B2018-07-19%2Bat%2B2.14.12%2BPM.png" width="400" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Install column - Repository homepage&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;Selecting "Kie Workbench" will trigger the installation modal:&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-3u16D4hwLho/W1DTYnHJ4GI/AAAAAAAAhGA/_vxyQyroYz0mXYbFwAE-syVJejAi_MHbwCLcBGAs/s1600/Screen%2BShot%2B2018-07-19%2Bat%2B2.17.47%2BPM.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="1115" data-original-width="1600" height="223" src="https://2.bp.blogspot.com/-3u16D4hwLho/W1DTYnHJ4GI/AAAAAAAAhGA/_vxyQyroYz0mXYbFwAE-syVJejAi_MHbwCLcBGAs/s320/Screen%2BShot%2B2018-07-19%2Bat%2B2.17.47%2BPM.png" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Workitem installation modal&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;Here you can enter specific information about the running KIE Workbench instance such as URL, Username, Password, Space name, and Project info where this workitem should be installed in.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;Clicking the Install button will install all workitem handlers from the selected workitem group to your workbench instance. Upon successful installation you should be able to see the installed workitem handlers inside the selected workbench project.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-y_zx2fnPEEI/W1DUdIWct5I/AAAAAAAAhGM/xqmmG9I19VsOYZCgp6fU3KAEq2f_0gItgCLcBGAs/s1600/Screen%2BShot%2B2018-07-19%2Bat%2B2.22.28%2BPM.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="594" data-original-width="1460" height="130" src="https://1.bp.blogspot.com/-y_zx2fnPEEI/W1DUdIWct5I/AAAAAAAAhGM/xqmmG9I19VsOYZCgp6fU3KAEq2f_0gItgCLcBGAs/s320/Screen%2BShot%2B2018-07-19%2Bat%2B2.22.28%2BPM.png" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Install success message&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-pYocdSOZ4zA/W1DUvBCFHPI/AAAAAAAAhGU/Xo679yf5FgsxOC1bSIV2Gt_5Lwi46vpQwCLcBGAs/s1600/Screen%2BShot%2B2018-07-19%2Bat%2B2.23.38%2BPM.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="391" data-original-width="1600" height="97" src="https://3.bp.blogspot.com/-pYocdSOZ4zA/W1DUvBCFHPI/AAAAAAAAhGU/Xo679yf5FgsxOC1bSIV2Gt_5Lwi46vpQwCLcBGAs/s400/Screen%2BShot%2B2018-07-19%2Bat%2B2.23.38%2BPM.png" width="400" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Archive workitem installed in "myproject"&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;br /&gt;Once installed you can start using your workitems when modeling your business processes:&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-xPtoJXd9LjU/W1DVTYxWDzI/AAAAAAAAhGg/yZGh_zE7SiIfTt_0ZMCdNAPV5X-BRX39wCLcBGAs/s1600/Screen%2BShot%2B2018-07-19%2Bat%2B2.25.35%2BPM.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="924" data-original-width="784" height="320" src="https://1.bp.blogspot.com/-xPtoJXd9LjU/W1DVTYxWDzI/AAAAAAAAhGg/yZGh_zE7SiIfTt_0ZMCdNAPV5X-BRX39wCLcBGAs/s320/Screen%2BShot%2B2018-07-19%2Bat%2B2.25.35%2BPM.png" width="271" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Start using the installed workitem!&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;Note that this feature is available only if you are running the workitem repository in "hosted" mode, so by hosting it via the &lt;a href="https://github.com/kiegroup/jbpm-work-items/tree/master/repository-springboot"&gt;repository-springboot&lt;/a&gt;, or the &lt;a href="https://github.com/kiegroup/jbpm-work-items/tree/master/repository-wildfly"&gt;repository-wildfly&lt;/a&gt; modules. When serving the repository content from the file system the Install column will not be displayed.&amp;nbsp;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Another thing to note is that since in almost all cases your hosted repository will have a different origin(domain) than the running workbench instances you are installing workitems to we need to enable CORS on the servers the workbench is running on. If you are running on Wildfly, this can simply be done inside your standalone.xml config:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-el-x_jf4J5g/W1DXdZr39MI/AAAAAAAAhGs/eOyLeL0f9wMpNbRsSpRlAa491h7hqXwKACLcBGAs/s1600/Screen%2BShot%2B2018-07-19%2Bat%2B2.35.15%2BPM.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="685" data-original-width="1600" height="171" src="https://2.bp.blogspot.com/-el-x_jf4J5g/W1DXdZr39MI/AAAAAAAAhGs/eOyLeL0f9wMpNbRsSpRlAa491h7hqXwKACLcBGAs/s400/Screen%2BShot%2B2018-07-19%2Bat%2B2.35.15%2BPM.png" width="400" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Wildfly CORS config&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div&gt;&lt;br /&gt;&lt;div&gt;Don't forget to change the value of the "Access-Control-Allow-Origin" header to the domain where you are hosting your workitem repository. In this case we use the default http://localhost:8090 which is used when running spring-boot repository setup.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Last thing to mention is that currently the KIE Workbench servlet filters do not handle CORS preflight requests unfortunately (hopefully this will be changed in the future). Because of this by default the workitem repository is not able to issue CORS requests to the workbench intances. To lift this limitation add this filter definition to your workbench web.xml and restart the server:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-KmunvksoLbQ/W1DYhQ6l3vI/AAAAAAAAhG4/u_DHL_pNHRoF2R0D0XpGXgdfJY5HItsQQCLcBGAs/s1600/Screen%2BShot%2B2018-07-19%2Bat%2B2.39.50%2BPM.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="466" data-original-width="1278" height="145" src="https://2.bp.blogspot.com/-KmunvksoLbQ/W1DYhQ6l3vI/AAAAAAAAhG4/u_DHL_pNHRoF2R0D0XpGXgdfJY5HItsQQCLcBGAs/s400/Screen%2BShot%2B2018-07-19%2Bat%2B2.39.50%2BPM.png" width="400" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Filter definition within KIE workbench&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;br /&gt;&lt;div&gt;As always feel free to leave any comments and suggestions. Enjoy!&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/FIA0kDAtFJs" height="1" width="1" alt=""/&gt;</content><summary>We added the ability to install workitems hosted by the  jBPM Workitem Repository on any running KIE Worbench instance directly from the repository. itself This lifts some limitations of installing workitems which was so far only possible from within process editors inside each running workbench. It also allows for future integrations with other runtime systems that can take advantage of the hoste...</summary><dc:creator>Tihomir Surdilovic</dc:creator><dc:date>2018-07-19T18:32:00Z</dc:date><feedburner:origLink>http://mswiderski.blogspot.com/2018/07/easy-workitem-installation-jbpm.html</feedburner:origLink></entry><entry><title>The wait is over: JBoss Web Server 5 with Tomcat 9 is here!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/hHJSxN9fiTA/" /><category term="Announcement" /><category term="JBoss Web Server" /><category term="Modern App Dev" /><category term="Apache" /><category term="httpd" /><category term="Narayana" /><category term="NIO" /><category term="NIO2" /><category term="Red Hat Enterprise Linux" /><category term="Red Hat JBoss Web Server" /><category term="tomcat" /><category term="tomcat-vault" /><category term="transaction processing" /><author><name>Ezequiel Aguilar</name></author><id>https://developers.redhat.com/blog/?p=507197</id><updated>2018-07-19T18:04:54Z</updated><published>2018-07-19T18:04:54Z</published><content type="html">&lt;p&gt;We are excited to announce the General Availability release of &lt;a href="https://developers.redhat.com/products/webserver/overview/"&gt;Red Hat JBoss Web Server 5.0&lt;/a&gt; for Red Hat Enterprise Linux (RHEL). Other platforms are will be released shortly. This release includes a technology preview of transactions processing through Narayana. JBoss Web Server 5 is available in the ZIP or RPM format from the JBoss Web Server 5.0 Maven repository and Container Catalog.&lt;/p&gt; &lt;p&gt;JBoss Web Server combines market-leading open source technologies with enterprise capabilities to provide a single solution for large-scale websites and lightweight web applications. It combines the world&amp;#8217;s most deployed web server (Apache) with the top servlet engine (Tomcat) and the best support in middleware (from Red Hat).&lt;span id="more-507197"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h3&gt;Main Components&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;h4&gt;Apache Tomcat 9&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;a servlet container in accordance with the Java Servlet Specification. JBoss Web Server contains Apache Tomcat 9&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;h4&gt;The Apache Tomcat Native Library&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;a Tomcat library, which improves Tomcat scalability, performance, and integration with native server technologies&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;h4&gt;The tomcat-vault&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;an extension for the JBoss Web Server used for securely storing passwords and other sensitive information used by a JBoss Web Server&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;h4&gt;The mod_cluster library&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;a library that allows communication between Apache Tomcat and the Apache HTTP Server’s mod_proxy_cluster module. This allows the Apache HTTP Server to be used as a load balancer for JBoss Web Server&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;!--more--&gt;&lt;/p&gt; &lt;h3&gt;&lt;strong&gt;New features and enhancements&lt;/strong&gt;&lt;/h3&gt; &lt;h4&gt;JBoss Web Server 5 is based on the shiny new Tomcat 9.0.7.  Feature highlights:&lt;/h4&gt; &lt;p&gt;&amp;#8211; HTTP/2 support&lt;br /&gt; &amp;#8211; Servlet 4.0 specification&lt;br /&gt; &amp;#8211; OpenSSL for TLS with JSSE connectors (NIO and NIO2)&lt;br /&gt; &amp;#8211; NIO connector, which is the default for HTTP/1.1 when &lt;code&gt;tomcat-native&lt;/code&gt; is installed&lt;br /&gt; &amp;#8211; TLS virtual hosting (SNI) support&lt;/p&gt; &lt;h4&gt;It also has these enhancements:&lt;/h4&gt; &lt;p&gt;&amp;#8211; Support is provided for embedded distributions (fat JAR deployments).&lt;br /&gt; &amp;#8211; Support for asynchronous NIO2 is provided.&lt;br /&gt; &amp;#8211; Transaction processing is provided through Narayana and DBCP2 (Tech Preview).&lt;br /&gt; &amp;#8211; System daemon integration scripts are provided for Red Hat Enterprise Linux users who install from .zip archives.&lt;br /&gt; &amp;#8211; The &lt;code&gt;tomcat-vault&lt;/code&gt; installation process has been improved.&lt;br /&gt; &amp;#8211; The &lt;code&gt;vault.properties&lt;/code&gt; file for &lt;code&gt;tomcat-vault&lt;/code&gt; can be stored outside &lt;code&gt;JWS_HOME&lt;/code&gt;.&lt;br /&gt; &amp;#8211; There is a change in manager and host-manager web app behavior.&lt;br /&gt; &amp;#8211; There is a change to &lt;code&gt;mod_cluster&lt;/code&gt; 1.4: a connector needs to be specified.&lt;br /&gt; &amp;#8211; Multiple properties files can be configured.&lt;br /&gt; &amp;#8211; Logging for JBoss Web Server with &lt;code&gt;log4j&lt;/code&gt; is deprecated.&lt;br /&gt; &amp;#8211; A embedded Tomcat server is included in the JBoss Web Server 5.0 Maven repository.&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h3&gt;Introducing Narayana (Technical Preview)&lt;/h3&gt; &lt;p&gt;Narayana on JBoss Web Server is currently in a technical preview status and has no official accompanying documentation at this time.&lt;/p&gt; &lt;p&gt;The Narayana transactions tookit provides support for applications developed using the following standards-based transaction protocols:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;JTA&lt;/li&gt; &lt;li&gt;JTS&lt;/li&gt; &lt;li&gt;Web-Service Transactions&lt;/li&gt; &lt;li&gt;REST Transactions&lt;/li&gt; &lt;li&gt;STM&lt;/li&gt; &lt;li&gt;XATMI/TX&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Narayana on JBoss Web Server is being developed for integration with Red Hat Process Automation Manager. Narayana on JBoss Web Server also provides a connection with PostgreSQL servers using a Tomcat JDBC Connection Pool.&lt;/p&gt; &lt;p&gt;For more information please review the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_jboss_web_server/5.0/"&gt;JBoss Web Server Documentation Site&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F19%2Fjboss-web-server-5-tomcat-9%2F&amp;#38;linkname=The%20wait%20is%20over%3A%20JBoss%20Web%20Server%205%20with%20Tomcat%209%20is%20here%21" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F19%2Fjboss-web-server-5-tomcat-9%2F&amp;#38;linkname=The%20wait%20is%20over%3A%20JBoss%20Web%20Server%205%20with%20Tomcat%209%20is%20here%21" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F19%2Fjboss-web-server-5-tomcat-9%2F&amp;#38;linkname=The%20wait%20is%20over%3A%20JBoss%20Web%20Server%205%20with%20Tomcat%209%20is%20here%21" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F19%2Fjboss-web-server-5-tomcat-9%2F&amp;#38;linkname=The%20wait%20is%20over%3A%20JBoss%20Web%20Server%205%20with%20Tomcat%209%20is%20here%21" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F19%2Fjboss-web-server-5-tomcat-9%2F&amp;#38;linkname=The%20wait%20is%20over%3A%20JBoss%20Web%20Server%205%20with%20Tomcat%209%20is%20here%21" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F19%2Fjboss-web-server-5-tomcat-9%2F&amp;#38;linkname=The%20wait%20is%20over%3A%20JBoss%20Web%20Server%205%20with%20Tomcat%209%20is%20here%21" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F19%2Fjboss-web-server-5-tomcat-9%2F&amp;#38;linkname=The%20wait%20is%20over%3A%20JBoss%20Web%20Server%205%20with%20Tomcat%209%20is%20here%21" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F19%2Fjboss-web-server-5-tomcat-9%2F&amp;#38;linkname=The%20wait%20is%20over%3A%20JBoss%20Web%20Server%205%20with%20Tomcat%209%20is%20here%21" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F19%2Fjboss-web-server-5-tomcat-9%2F&amp;#38;title=The%20wait%20is%20over%3A%20JBoss%20Web%20Server%205%20with%20Tomcat%209%20is%20here%21" data-a2a-url="https://developers.redhat.com/blog/2018/07/19/jboss-web-server-5-tomcat-9/" data-a2a-title="The wait is over: JBoss Web Server 5 with Tomcat 9 is here!"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/19/jboss-web-server-5-tomcat-9/"&gt;The wait is over: JBoss Web Server 5 with Tomcat 9 is here!&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/hHJSxN9fiTA" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;We are excited to announce the General Availability release of Red Hat JBoss Web Server 5.0 for Red Hat Enterprise Linux (RHEL). Other platforms are will be released shortly. This release includes a technology preview of transactions processing through Narayana. JBoss Web Server 5 is available in the ZIP or RPM format from the JBoss [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/19/jboss-web-server-5-tomcat-9/"&gt;The wait is over: JBoss Web Server 5 with Tomcat 9 is here!&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/07/19/jboss-web-server-5-tomcat-9/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">507197</post-id><dc:creator>Ezequiel Aguilar</dc:creator><dc:date>2018-07-19T18:04:54Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/07/19/jboss-web-server-5-tomcat-9/</feedburner:origLink></entry><entry><title>Inspect HTTP Sessions</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/y1YndyiwjJc/" /><category term="feed_group_name_wildfly" scheme="searchisko:content:tags" /><category term="feed_name_hal" scheme="searchisko:content:tags" /><author><name>Harald Pehl</name></author><id>searchisko:content:id:jbossorg_blog-inspect_http_sessions</id><updated>2018-07-19T12:03:25Z</updated><published>2018-07-19T12:03:25Z</published><content type="html">The undertow subsystem in deployments has been enhanced and provides new operations to inspect HTTP sessions. Session Statistics To see session statistics please select a deployment under &amp;ldquo;Runtime / Server / Web / Deployment&amp;rdquo;. Besides the main attributes like deployment name and context path, the preview shows statistics for the number of active, expired and invalid sessions. Besides that you can see statistics about the session time. Session Attributes If you select a deployment and press &amp;ldquo;View&amp;rdquo;, you can see more details about the deployment.&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/y1YndyiwjJc" height="1" width="1" alt=""/&gt;</content><summary>The undertow subsystem in deployments has been enhanced and provides new operations to inspect HTTP sessions. Session Statistics To see session statistics please select a deployment under “Runtime / Server / Web / Deployment”. Besides the main attributes like deployment name and context path, the preview shows statistics for the number of active, expired and invalid sessions. Besides that you can ...</summary><dc:creator>Harald Pehl</dc:creator><dc:date>2018-07-19T12:03:25Z</dc:date><feedburner:origLink>https://hal.github.io/blog/inspect-http-sessions/</feedburner:origLink></entry><entry><title>Asynchronous injection in RESTEasy</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/K2wsJ3jIW8k/asynchronous-injection-in-resteasy" /><category term="feed_group_name_resteasy" scheme="searchisko:content:tags" /><category term="feed_name_resteasy" scheme="searchisko:content:tags" /><author><name>Stephane Epardaud</name></author><id>searchisko:content:id:jbossorg_blog-asynchronous_injection_in_resteasy</id><updated>2018-07-19T09:05:10Z</updated><published>2018-07-19T09:05:10Z</published><content type="html">&lt;!-- [DocumentBodyStart:73f37c64-f58e-405f-91b0-438666cb4014] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;Now that we've seen &lt;a class="jive-link-blog-small" data-containerId="1100" data-containerType="37" data-objectId="6190" data-objectType="38" href="https://developer.jboss.org/community/resteasy/blog/2018/06/04/asynchronous-reactive-rxjava-and-beyond"&gt;RxJava support in RESTEasy&lt;/a&gt;, we're ready to build on more reactive applications to illustrate common reactive use-cases.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Let's create an application with several types of requests, that we collect statistics on, such as the number of times each request has been called. And let's store those statistics in a &lt;a class="jive-link-external-small" href="https://redis.io/" rel="nofollow"&gt;Redis&lt;/a&gt; instance. For that we will use the &lt;a class="jive-link-external-small" href="https://vertx.io/docs/vertx-redis-client/java/" rel="nofollow"&gt;Vert.x Redis client&lt;/a&gt; because it supports RxJava out of the box.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h3&gt;A sample application&lt;/h3&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;So we will be importing the following Maven modules:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:ddb6edf2-090b-47f3-99e4-e60014dea111][excluded]--&gt;&lt;pre class="xml" name="code"&gt;&amp;lt;!-- For RESTEasy --&amp;gt; &amp;lt;dependency&amp;gt; &amp;#160;&amp;#160;&amp;#160; &amp;lt;groupId&amp;gt;org.jboss.resteasy&amp;lt;/groupId&amp;gt; &amp;#160;&amp;#160;&amp;#160; &amp;lt;artifactId&amp;gt;resteasy-jaxrs&amp;lt;/artifactId&amp;gt; &amp;#160;&amp;#160;&amp;#160; &amp;lt;version&amp;gt;4.0.0-SNAPSHOT&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!-- For RESTEasy's support of RxJava 2 --&amp;gt; &amp;lt;dependency&amp;gt; &amp;#160;&amp;#160;&amp;#160; &amp;lt;groupId&amp;gt;org.jboss.resteasy&amp;lt;/groupId&amp;gt; &amp;#160;&amp;#160;&amp;#160; &amp;lt;artifactId&amp;gt;resteasy-rxjava2&amp;lt;/artifactId&amp;gt; &amp;#160;&amp;#160;&amp;#160; &amp;lt;version&amp;gt;4.0.0-SNAPSHOT&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!-- For the Vert.x Redis client --&amp;gt; &amp;lt;dependency&amp;gt; &amp;#160;&amp;#160;&amp;#160; &amp;lt;groupId&amp;gt;io.vertx&amp;lt;/groupId&amp;gt; &amp;#160;&amp;#160;&amp;#160; &amp;lt;artifactId&amp;gt;vertx-redis-client&amp;lt;/artifactId&amp;gt; &amp;#160;&amp;#160;&amp;#160; &amp;lt;version&amp;gt;3.5.3&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!-- For the Vert.x RxJava 2 support --&amp;gt; &amp;lt;dependency&amp;gt; &amp;#160;&amp;#160;&amp;#160; &amp;lt;groupId&amp;gt;io.vertx&amp;lt;/groupId&amp;gt; &amp;#160;&amp;#160;&amp;#160; &amp;lt;artifactId&amp;gt;vertx-rx-java2&amp;lt;/artifactId&amp;gt; &amp;#160;&amp;#160;&amp;#160; &amp;lt;version&amp;gt;3.5.3&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &lt;/pre&gt;&lt;!--[CodeBlockEnd:ddb6edf2-090b-47f3-99e4-e60014dea111]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Now, in order to make sure I get a single Redis client for my application, I will have to make it injectable by RESTEasy with the &lt;span style="font-family: 'courier new', courier;"&gt;@Context&lt;/span&gt; annotation, and there's no support for pluggable injection in JAX-RS so it's a little convoluted, but we can achieve that with the help of this custom &lt;span style="font-family: 'courier new', courier;"&gt;Feature&lt;/span&gt;:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:a658d716-64dd-47b2-af29-51fd688522f8][excluded]--&gt;&lt;pre class="java" name="code"&gt;@Provider public class RedisFeature implements Feature { &amp;#160; private RedisClient redis; &amp;#160; public RedisFeature(){ &amp;#160;&amp;#160;&amp;#160; // connect to the local Redis &amp;#160;&amp;#160;&amp;#160; redis = RedisClient.create(Vertx.vertx()); &amp;#160; } &amp;#160; public boolean configure(FeatureContext context) { &amp;#160;&amp;#160;&amp;#160; // this is tied to the deployment, which is what we want for the redis client &amp;#160;&amp;#160;&amp;#160; if(context.getConfiguration().getRuntimeType() == RuntimeType.CLIENT) &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; return false; &amp;#160;&amp;#160;&amp;#160; Dispatcher dispatcher = ResteasyProviderFactory.getContextData(Dispatcher.class); &amp;#160;&amp;#160;&amp;#160; if(dispatcher == null) { &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; // this can happen, but it means we're not able to find a deployment &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; return false; &amp;#160;&amp;#160;&amp;#160; } &amp;#160;&amp;#160;&amp;#160; dispatcher.getDefaultContextObjects().put(RedisClient.class, redis); &amp;#160;&amp;#160;&amp;#160; return true; &amp;#160; } }&lt;/pre&gt;&lt;!--[CodeBlockEnd:a658d716-64dd-47b2-af29-51fd688522f8]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;We can now write our three requests that collect usage statistics (they inject the &lt;span style="font-family: 'courier new', courier;"&gt;RedisClient&lt;/span&gt;):&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:ac7e36e4-6e4f-41ec-b625-8f9f9b62da29][excluded]--&gt;&lt;pre class="java" name="code"&gt;@Path("/") public class Resource { &amp;#160; @Context &amp;#160; private RedisClient redis; &amp;#160; @Path("req1") &amp;#160; @GET &amp;#160; public Single&amp;lt;String&amp;gt; req1() { &amp;#160;&amp;#160;&amp;#160; return redis.rxIncr("req1.count").map(count -&amp;gt; "Req1 count: "+count); &amp;#160; } &amp;#160; @Path("req2") &amp;#160; @GET &amp;#160; public Single&amp;lt;String&amp;gt; req2() { &amp;#160;&amp;#160;&amp;#160; return redis.rxIncr("req2.count").map(count -&amp;gt; "Req2 count: "+count); &amp;#160; } &amp;#160; @Path("req3") &amp;#160; @GET &amp;#160; public Single&amp;lt;String&amp;gt; req3() { &amp;#160;&amp;#160;&amp;#160; return redis.rxIncr("req3.count").map(count -&amp;gt; "Req3 count: "+count); &amp;#160; } }&lt;/pre&gt;&lt;!--[CodeBlockEnd:ac7e36e4-6e4f-41ec-b625-8f9f9b62da29]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;As you can see we count usage in the Redis keys &lt;span style="font-family: 'courier new', courier;"&gt;req1.count&lt;/span&gt;, &lt;span style="font-family: 'courier new', courier;"&gt;req2.count&lt;/span&gt; and &lt;span style="font-family: 'courier new', courier;"&gt;req3.count&lt;/span&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Now, if we want to display them, we have to get all three values, which either means a lot of nesting with RxJava, or (better) using the &lt;a class="jive-link-external-small" href="http://reactivex.io/documentation/operators/zip.html" rel="nofollow"&gt;Single.zip&lt;/a&gt; operator:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:f83e32d8-0e12-4808-a71e-4c8198d90fa0][excluded]--&gt;&lt;pre class="java" name="code"&gt;@GET public Single&amp;lt;String&amp;gt; info(){ &amp;#160; return Single.zip(redis.rxGet("req1.count"), redis.rxGet("req2.count"), redis.rxGet("req3.count"), &amp;#160;&amp;#160;&amp;#160; (req1, req2, req3) -&amp;gt; "Request 1: "+req1+"\nRequest 2: "+req2+"\nRequest 2: "+req3);&amp;#160; }&lt;/pre&gt;&lt;!--[CodeBlockEnd:f83e32d8-0e12-4808-a71e-4c8198d90fa0]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;As you can see, with RxJava, getting several values is a little more verbose than if we were doing it in blocking style. In fact, in real applications it is very common to start most requests with actions that depend on resolving a few asynchronous values. They can be waiting for database results, querying caches, or even obtaining permission lists, but eventually, lots of your requests will start with a &lt;span style="font-family: 'courier new', courier;"&gt;Single.zip&lt;/span&gt; call to get the values you need in your request. That's annoying, and when they are often the same values, that's just plain boilerplate.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h3&gt;The solution&lt;/h3&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;What if RESTEasy could take all those async values that you need, and resolve them before it called your resource method? This is called &lt;em&gt;asynchronous injection&lt;/em&gt;, and the latest RESTEasy does just that.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;The async values we want to be resolved are originally of type &lt;span style="font-family: 'courier new', courier;"&gt;Single&amp;lt;String&amp;gt;&lt;/span&gt;, so their resolved value is of type &lt;span style="font-family: 'courier new', courier;"&gt;String&lt;/span&gt;. In order to get async injection, we annotate our injected resolved value with &lt;span style="font-family: 'courier new', courier;"&gt;@Context&lt;/span&gt;, and RESTEasy will look up a &lt;span style="font-family: 'courier new', courier;"&gt;ContextInjector&lt;/span&gt; that is declared to resolve values to &lt;span style="font-family: 'courier new', courier;"&gt;String&lt;/span&gt;. In our case, we declare our &lt;span style="font-family: 'courier new', courier;"&gt;ContextInjector&lt;/span&gt; to resolve values from type &lt;span style="font-family: 'courier new', courier;"&gt;Single&amp;lt;String&amp;gt;&lt;/span&gt; to &lt;span style="font-family: 'courier new', courier;"&gt;String&lt;/span&gt;, but any async type is supported, thanks to the existing support for pluggable async types.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Once we've declared our &lt;span style="font-family: 'courier new', courier;"&gt;ContextInjector&lt;/span&gt;, RESTEasy will call it to get the &lt;span style="font-family: 'courier new', courier;"&gt;Single&amp;lt;String&amp;gt;&lt;/span&gt; that provides the &lt;span style="font-family: 'courier new', courier;"&gt;String&lt;/span&gt; we want asynchronously injected, and will wait for the async value to be resolved, and only then proceed to inject it in your resource method. This way, when you start your resource method, you already have all your async values resolved!&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;For our example, we're going to describe our redis queries with the &lt;span style="font-family: 'courier new', courier;"&gt;@RedisQuery&lt;/span&gt; annotation:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:34dff426-0d1d-40c4-bc64-aa847a3902fa][excluded]--&gt;&lt;pre class="plain" name="code"&gt;@Target(ElementType.PARAMETER) @Retention(RetentionPolicy.RUNTIME) public @interface RedisQuery { &amp;#160; String value(); }&lt;/pre&gt;&lt;!--[CodeBlockEnd:34dff426-0d1d-40c4-bc64-aa847a3902fa]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Now we can write our new resource method that wants these redis queries injected:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:3a5be2ff-5f7c-412d-aad4-2331ac3dd0a9][excluded]--&gt;&lt;pre class="java" name="code"&gt;@Path("inject") @GET public String infoInjection(@Context @RedisQuery("req1.count") String req1, &amp;#160;&amp;#160;&amp;#160; @Context @RedisQuery("req2.count") String req2, &amp;#160;&amp;#160;&amp;#160; @Context @RedisQuery("req3.count") String req3){ &amp;#160; return "Request 1: "+req1+"\nRequest 2: "+req2+"\nRequest 2: "+req3; }&lt;/pre&gt;&lt;!--[CodeBlockEnd:3a5be2ff-5f7c-412d-aad4-2331ac3dd0a9]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;And all we have to do for that async injection to work is to declare our &lt;span style="font-family: 'courier new', courier;"&gt;ContextInjector&lt;/span&gt;:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:8fbdbb71-4af6-469c-ba27-f4cd39a098e2][excluded]--&gt;&lt;pre class="java" name="code"&gt;@Provider public class RedisInjector implements ContextInjector&amp;lt;Single&amp;lt;String&amp;gt;, String&amp;gt; { &amp;#160; @Override &amp;#160; public Single&amp;lt;String&amp;gt; resolve(Class&amp;lt;?&amp;gt; rawType, Type genericType, Annotation[] annotations) { &amp;#160;&amp;#160;&amp;#160; RedisClient redisClient = ResteasyProviderFactory.getContextData(RedisClient.class); &amp;#160;&amp;#160;&amp;#160; for (Annotation annotation : annotations) { &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; if(annotation.annotationType() == RedisQuery.class) { &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; String query = ((RedisQuery) annotation).value(); &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; // let's inject ! &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; return redisClient.rxGet(query); &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; } &amp;#160;&amp;#160;&amp;#160; } &amp;#160;&amp;#160;&amp;#160; // not for us: try other injectors &amp;#160;&amp;#160;&amp;#160; return null; &amp;#160; } }&lt;/pre&gt;&lt;!--[CodeBlockEnd:8fbdbb71-4af6-469c-ba27-f4cd39a098e2]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;As you can see, we just have to declare that our &lt;span style="font-family: 'courier new', courier;"&gt;ContextInjector&lt;/span&gt; can provide values of type &lt;span style="font-family: 'courier new', courier;"&gt;String&lt;/span&gt; via an async type &lt;span style="font-family: 'courier new', courier;"&gt;Single&amp;lt;String&amp;gt;&lt;/span&gt;, and check the annotations on the injection point to figure out what query to run.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;As I mentioned previously, this is not limited to async values of type &lt;span style="font-family: 'courier new', courier;"&gt;Single&lt;/span&gt;, because &lt;a class="jive-link-external-small" href="https://docs.jboss.org/resteasy/docs/3.5.1.Final/userguide/html/Reactive.html" rel="nofollow"&gt;any async value type is supported via plugins&lt;/a&gt;, and in fact only &lt;span style="font-family: 'courier new', courier;"&gt;CompletionStage&lt;/span&gt; is supported by default (&lt;span style="font-family: 'courier new', courier;"&gt;Single&lt;/span&gt; being provided by the &lt;span style="font-family: 'courier new', courier;"&gt;resteasy-rxjava2&lt;/span&gt; module we're using).&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h3&gt;Conclusion&lt;/h3&gt;&lt;h3&gt;&lt;/h3&gt;&lt;p&gt;We've removed yet another common cause of boilerplate: rejoice!&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Async injection was added in the latest &lt;a class="jive-link-blog-small" data-containerId="1100" data-containerType="37" data-objectId="6204" data-objectType="38" href="https://developer.jboss.org/community/resteasy/blog/2018/07/02/resteasy-360final-and-400beta4"&gt;4.0.0.Beta4&lt;/a&gt; release (&lt;a class="jive-link-external-small" href="https://issues.jboss.org/projects/RESTEASY/issues/RESTEASY-1905?filter=allopenissues" rel="nofollow"&gt;RESTEASY-1905&lt;/a&gt;). Go ahead and try it out while it's fresh!&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:73f37c64-f58e-405f-91b0-438666cb4014] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/K2wsJ3jIW8k" height="1" width="1" alt=""/&gt;</content><summary>Now that we've seen RxJava support in RESTEasy, we're ready to build on more reactive applications to illustrate common reactive use-cases.   Let's create an application with several types of requests, that we collect statistics on, such as the number of times each request has been called. And let's store those statistics in a Redis instance. For that we will use the Vert.x Redis client because it...</summary><dc:creator>Stephane Epardaud</dc:creator><dc:date>2018-07-19T09:05:10Z</dc:date><feedburner:origLink>https://developer.jboss.org/community/resteasy/blog/2018/07/19/asynchronous-injection-in-resteasy</feedburner:origLink></entry><entry><title>Five Advantages of Log-Based Change Data Capture</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/TYZDZBQyALA/" /><category term="discussion" scheme="searchisko:content:tags" /><category term="feed_group_name_debezium" scheme="searchisko:content:tags" /><category term="feed_name_debezium" scheme="searchisko:content:tags" /><author><name>Gunnar Morling</name></author><id>searchisko:content:id:jbossorg_blog-five_advantages_of_log_based_change_data_capture</id><updated>2018-07-19T19:15:38Z</updated><published>2018-07-19T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Yesterday I had the opportunity to present Debezium and the idea of change data capture (CDC) to the &lt;a href="https://twitter.com/JUG_DA/status/1019634941020332032"&gt;Darmstadt Java User Group&lt;/a&gt;. It was a great evening with lots of interesting discussions and questions. One of the questions being the following: what is the advantage of using a log-based change data capturing tool such as Debezium over simply polling for updated records?&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;So first of all, what’s the difference between the two approaches? With polling-based (or query-based) CDC you repeatedly run queries (e.g. via JDBC) for retrieving any newly inserted or updated rows from the tables to be captured. Log-based CDC in contrast works by reacting to any changes to the database’s log files (e.g. MySQL’s binlog or MongoDB’s op log).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;As this wasn’t the first time this question came up, I thought I could provide a more extensive answer also here on the blog. That way I’ll be able to refer to this post in the future, should the question come up again :)&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;So without further ado, here’s my list of five advantages of log-based CDC over polling-based approaches.&lt;/p&gt; &lt;/div&gt; &lt;div class="dlist"&gt; &lt;dl&gt; &lt;dt class="hdlist1"&gt;All Data Changes Are Captured&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;By reading the database’s log, you get the complete list of all data changes in their exact order of application. This is vital for many use cases where you are interested in the complete history of record changes. In contrast, with a polling-based approach you might miss intermediary data changes that happen between two runs of the poll loop. For instance it could happen that a record is inserted and deleted between two polls, in which case this record would never be captured by poll-based CDC.&lt;/p&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Related to this is the aspect of downtimes, e.g. when updating the CDC tool. With poll-based CDC, only the latest state of a given record would be captured once the CDC tool is back online, missing any earlier changes to the record that occurred during the downtime. A log-based CDC tool will be able to resume reading the database log from the point where it left off before it was shut down, causing the complete history of data changes to be captured.&lt;/p&gt; &lt;/div&gt; &lt;/dd&gt; &lt;dt class="hdlist1"&gt;Low Delays of Events While Avoiding Increased CPU Load&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;With polling, you might be tempted to increase the frequency of polling attempts in order to reduce the chances of missing intermediary updates. While this works to some degree, polling too frequently may cause performance issues (as the queries used for polling cause load on the source database). On the other hand, expanding the polling interval will reduce the CPU load but may not only result in missed change events but also in a longer delay for propagating data changes. Log-based CDC allows you to react to data changes in near real-time without paying the price of spending CPU time on running polling queries repeatedly.&lt;/p&gt; &lt;/dd&gt; &lt;dt class="hdlist1"&gt;No Impact on Data Model&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Polling requires some indicator to identify those records that have been changed since the last poll. So all the captured tables need to have some column like &lt;code&gt;LAST_UPDATE_TIMESTAMP&lt;/code&gt; which can be used to find changed rows. This can be fine in some cases, but in others such requirement might not be desirable. Specifically, you’ll need to make sure that the update timestamps are maintained correctly on all tables to be captured by the writing applications or e.g. through triggers.&lt;/p&gt; &lt;/dd&gt; &lt;dt class="hdlist1"&gt;Can Capture Deletes&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Naturally, polling will not allow you to identify any records that have been deleted since the last poll. Often times that’s a problem for replication-like use cases where you’d like to have an identical data set on the source database and the replication targets, meaning you’d also like to delete records on the sink side if they have been removed in the source database.&lt;/p&gt; &lt;/dd&gt; &lt;dt class="hdlist1"&gt;Can Capture Old Record State And Further Meta Data&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Depending on the source database’s capabilities, log-based CDC can provide the old record state for update and delete events. Whereas with polling, you’ll only get the current row state. Having the old row state handy in a single change event can be interesting for many use cases, e.g. if you’d like to display the complete data change with old and new column values to an application user for auditing purposes.&lt;/p&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In addition, log-based approaches often can provide streams of schema changes (e.g. in form of applied DDL statements) and expose additional metadata such as transaction ids or the user applying a certain change. These things may generally be doable with query-based approaches, too (depending on the capabilities of the database), I haven’t really seen it being done in practice, though.&lt;/p&gt; &lt;/div&gt; &lt;/dd&gt; &lt;/dl&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="summary"&gt;&lt;a class="anchor" href="#summary"&gt;&lt;/a&gt;Summary&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;And that’s it, five advantages of log-based change data capture. Note that this is not to say that polling-based CDC doesn’t have its applications. If for instance your use case can be satisfied by propagating changes once per hour and it’s not a problem to miss intermediary versions of records that were valid in between, it can be perfectly fine.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;But if you’re interested in capturing data changes in near real-time, making sure you don’t miss any change events (including deletions), then I’d recommend very much to explore the possibilities of log-based CDC as enabled by Debezium. The Debezium connectors do all the heavy-lifting for you, i.e. you don’t have to deal with all the low-level specifics of the individual databases and the means of getting changes from their logs. Instead, you can consume the generic and largely unified change data events produced by Debezium.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="about_debezium"&gt;&lt;a class="anchor" href="#about_debezium"&gt;&lt;/a&gt;About Debezium&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Debezium is an open source distributed platform that turns your existing databases into event streams, so applications can see and respond almost instantly to each committed row-level change in the databases. Debezium is built on top of &lt;a href="http://kafka.apache.org/"&gt;Kafka&lt;/a&gt; and provides &lt;a href="http://kafka.apache.org/documentation.html#connect"&gt;Kafka Connect&lt;/a&gt; compatible connectors that monitor specific database management systems. Debezium records the history of data changes in Kafka logs, so your application can be stopped and restarted at any time and can easily consume all of the events it missed while it was not running, ensuring that all events are processed correctly and completely. Debezium is &lt;a href="http://debezium.io/license"&gt;open source&lt;/a&gt; under the &lt;a href="http://www.apache.org/licenses/LICENSE-2.0.html"&gt;Apache License, Version 2.0&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="get_involved"&gt;&lt;a class="anchor" href="#get_involved"&gt;&lt;/a&gt;Get involved&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We hope you find Debezium interesting and useful, and want to give it a try. Follow us on Twitter &lt;a href="https://twitter.com/debezium"&gt;@debezium&lt;/a&gt;, &lt;a href="https://gitter.im/debezium/user"&gt;chat with us on Gitter&lt;/a&gt;, or join our &lt;a href="https://groups.google.com/forum/#!forum/debezium"&gt;mailing list&lt;/a&gt; to talk with the community. All of the code is open source &lt;a href="https://github.com/debezium/"&gt;on GitHub&lt;/a&gt;, so build the code locally and help us improve ours existing connectors and add even more connectors. If you find problems or have ideas how we can improve Debezium, please let us know or &lt;a href="https://issues.jboss.org/projects/DBZ/issues/"&gt;log an issue&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/TYZDZBQyALA" height="1" width="1" alt=""/&gt;</content><summary>Yesterday I had the opportunity to present Debezium and the idea of change data capture (CDC) to the Darmstadt Java User Group. It was a great evening with lots of interesting discussions and questions. One of the questions being the following: what is the advantage of using a log-based change data capturing tool such as Debezium over simply polling for updated records? So first of all, what’s the...</summary><dc:creator>Gunnar Morling</dc:creator><dc:date>2018-07-19T00:00:00Z</dc:date><feedburner:origLink>http://debezium.io/blog/2018/07/19/advantages-of-log-based-change-data-capture/</feedburner:origLink></entry><entry><title>July 19th DevNation Live: Container pipeline master: Continuous integration + continuous delivery with Jenkins</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/VXeTjlL1GAA/" /><category term="CI/CD" /><category term="DevNation" /><category term="Events" /><category term="Red Hat OpenShift Container Platform" /><category term="containers" /><category term="Continuous Delivery" /><category term="Continuous Integration" /><category term="DevNation Live" /><category term="Jenkins" /><category term="Jenkins pipeline" /><category term="kubernetes" /><category term="Red Hat OpenShift" /><author><name>Burr Sutter</name></author><id>https://developers.redhat.com/blog/?p=507387</id><updated>2018-07-18T16:45:49Z</updated><published>2018-07-18T16:45:49Z</published><content type="html">&lt;p&gt;&lt;span style="font-weight: 400;"&gt;Jo&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;in us for the next online DevNation Live on Thursday, July 19th at 12pm EDT for &lt;/span&gt;&lt;a href="https://onlinexperiences.com/Server.nxp?LASCmd=AI:4;F:APIUTILS!51004&amp;#38;PageID=2C1CF13E-08F4-43A4-B25D-0B38FE3226CF&amp;#38;AffiliateData=blog"&gt;&lt;i&gt;&lt;span style="font-weight: 400;"&gt;Container pipeline master: Continuous integration + continuous delivery with Jenkins&lt;/span&gt;&lt;/i&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;, presented by &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Red Hat principal technical product marketing manager for &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Red Hat&lt;/span&gt;&lt;span style="font-weight: 400;"&gt; OpenShift&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;, &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Siamak Sadeghianfar&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;In this session, we’ll take a detailed look into how you can build a super slick, automated continuous integration and continuous delivery (CI/CD) Jenkins pipeline that delivers your application payloads onto the enterprise Kubernetes platform, Red Hat OpenShift. You see how zero-downtime deployment patterns can be part of your release process when you are using a container platform based on Kubernetes.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Automating your build, test, and deployment processes can improve reliability and reduce the need for rollbacks. However, we’ll show you how rollbacks can be handled too.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://onlinexperiences.com/Server.nxp?LASCmd=AI:4;F:APIUTILS!51004&amp;#38;PageID=2C1CF13E-08F4-43A4-B25D-0B38FE3226CF&amp;#38;AffiliateData=blog"&gt;&lt;b&gt;Register now&lt;/b&gt;&lt;/a&gt;&lt;b&gt; and join the live presentation at 12pm EDT, Thursday, July 19th. &lt;/b&gt;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;Session Agenda:&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;span id="more-507387"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;In this session you’ll discover:&lt;/span&gt;&lt;/p&gt; &lt;ol&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;How to build a continuous integration and continuous delivery (CI/CD) pipeline using Jenkins on a container platform.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Why &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Red Hat&lt;/span&gt;&lt;span style="font-weight: 400;"&gt; OpenShift (the enterprise Kubernetes platform) makes it easy for even small teams to build sophisticated deployment pipelines.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;How zero downtime deployments and rollbacks can be achieved using a container platform.&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;&lt;b&gt;About the speakers&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;b&gt;&lt;i&gt;Siamak Sadeghianfar, Principle technical marketing manager, OpenShift, Red Hat&lt;/i&gt;&lt;/b&gt;&lt;/p&gt; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;span style="font-weight: 400;"&gt;Siamak Sadeghianfar (@&lt;/span&gt;&lt;a href="https://twitter.com/siamaks"&gt;&lt;span style="font-weight: 400;"&gt;siamaks&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;) is a Red Hat principal technical product marketing manager for &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Red Hat&lt;/span&gt;&lt;span style="font-weight: 400;"&gt; OpenShift. Siamak strives to educate IT professionals, customers, and partners on all aspects of application development with containers, and how new technologies can be used to solve business problems quicker and with less friction. A developer at heart, he is passionate about the application development life cycle, processes, and architecture. Siamak has more than 15 years of experience in the IT industry.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://twitter.com/siamaks"&gt;&lt;span style="font-weight: 400;"&gt;https://twitter.com/siamaks&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;DevNation Live Tech Talks&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Check our &lt;/span&gt;&lt;a href="https://developers.redhat.com/events/"&gt;&lt;span style="font-weight: 400;"&gt;developer events&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; page to find out what is happening next, such as upcoming &lt;/span&gt;&lt;a href="https://onlinexperiences.com/Server.nxp?LASCmd=AI:4;F:APIUTILS!51004&amp;#38;PageID=2C1CF13E-08F4-43A4-B25D-0B38FE3226CF&amp;#38;AffiliateData=blog"&gt;&lt;span style="font-weight: 400;"&gt;DevNation Live Tech Talks&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;. You can view over a dozen recorded videos for previous sessions:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;July 5: Feature toggles and hypothesis-driven development&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;June 21: Advanced Microservices Tracing with Jaeger&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;June 7: Your Journey to a Serverless World—An Introduction to Serverless&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;May 16: Serverless and Servicefull Applications – Where Microservices complements Serverless&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;b&gt;Don’t forget to &lt;/b&gt;&lt;a href="https://onlinexperiences.com/Server.nxp?LASCmd=AI:4;F:APIUTILS!51004&amp;#38;PageID=2C1CF13E-08F4-43A4-B25D-0B38FE3226CF&amp;#38;AffiliateData=blog"&gt;&lt;b&gt;register now&lt;/b&gt;&lt;/a&gt;&lt;b&gt; and join the live presentation at 12pm EDT, Thursday, July 19th.&lt;/b&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F18%2Fjuly-19th-devnation-live-blog-and-social-container-pipeline-master-continuous-integration-continuous-delivery-with-jenkins%2F&amp;#38;linkname=July%2019th%20DevNation%20Live%3A%20Container%20pipeline%20master%3A%20Continuous%20integration%20%2B%20continuous%20delivery%20with%20Jenkins" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F18%2Fjuly-19th-devnation-live-blog-and-social-container-pipeline-master-continuous-integration-continuous-delivery-with-jenkins%2F&amp;#38;linkname=July%2019th%20DevNation%20Live%3A%20Container%20pipeline%20master%3A%20Continuous%20integration%20%2B%20continuous%20delivery%20with%20Jenkins" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F18%2Fjuly-19th-devnation-live-blog-and-social-container-pipeline-master-continuous-integration-continuous-delivery-with-jenkins%2F&amp;#38;linkname=July%2019th%20DevNation%20Live%3A%20Container%20pipeline%20master%3A%20Continuous%20integration%20%2B%20continuous%20delivery%20with%20Jenkins" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F18%2Fjuly-19th-devnation-live-blog-and-social-container-pipeline-master-continuous-integration-continuous-delivery-with-jenkins%2F&amp;#38;linkname=July%2019th%20DevNation%20Live%3A%20Container%20pipeline%20master%3A%20Continuous%20integration%20%2B%20continuous%20delivery%20with%20Jenkins" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F18%2Fjuly-19th-devnation-live-blog-and-social-container-pipeline-master-continuous-integration-continuous-delivery-with-jenkins%2F&amp;#38;linkname=July%2019th%20DevNation%20Live%3A%20Container%20pipeline%20master%3A%20Continuous%20integration%20%2B%20continuous%20delivery%20with%20Jenkins" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F18%2Fjuly-19th-devnation-live-blog-and-social-container-pipeline-master-continuous-integration-continuous-delivery-with-jenkins%2F&amp;#38;linkname=July%2019th%20DevNation%20Live%3A%20Container%20pipeline%20master%3A%20Continuous%20integration%20%2B%20continuous%20delivery%20with%20Jenkins" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F18%2Fjuly-19th-devnation-live-blog-and-social-container-pipeline-master-continuous-integration-continuous-delivery-with-jenkins%2F&amp;#38;linkname=July%2019th%20DevNation%20Live%3A%20Container%20pipeline%20master%3A%20Continuous%20integration%20%2B%20continuous%20delivery%20with%20Jenkins" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F18%2Fjuly-19th-devnation-live-blog-and-social-container-pipeline-master-continuous-integration-continuous-delivery-with-jenkins%2F&amp;#38;linkname=July%2019th%20DevNation%20Live%3A%20Container%20pipeline%20master%3A%20Continuous%20integration%20%2B%20continuous%20delivery%20with%20Jenkins" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F18%2Fjuly-19th-devnation-live-blog-and-social-container-pipeline-master-continuous-integration-continuous-delivery-with-jenkins%2F&amp;#38;title=July%2019th%20DevNation%20Live%3A%20Container%20pipeline%20master%3A%20Continuous%20integration%20%2B%20continuous%20delivery%20with%20Jenkins" data-a2a-url="https://developers.redhat.com/blog/2018/07/18/july-19th-devnation-live-blog-and-social-container-pipeline-master-continuous-integration-continuous-delivery-with-jenkins/" data-a2a-title="July 19th DevNation Live: Container pipeline master: Continuous integration + continuous delivery with Jenkins"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/18/july-19th-devnation-live-blog-and-social-container-pipeline-master-continuous-integration-continuous-delivery-with-jenkins/"&gt;July 19th DevNation Live: Container pipeline master: Continuous integration + continuous delivery with Jenkins&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/VXeTjlL1GAA" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Join us for the next online DevNation Live on Thursday, July 19th at 12pm EDT for Container pipeline master: Continuous integration + continuous delivery with Jenkins, presented by Red Hat principal technical product marketing manager for Red Hat OpenShift, Siamak Sadeghianfar. In this session, we’ll take a detailed look into how you can build a super [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/18/july-19th-devnation-live-blog-and-social-container-pipeline-master-continuous-integration-continuous-delivery-with-jenkins/"&gt;July 19th DevNation Live: Container pipeline master: Continuous integration + continuous delivery with Jenkins&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/07/18/july-19th-devnation-live-blog-and-social-container-pipeline-master-continuous-integration-continuous-delivery-with-jenkins/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">507387</post-id><dc:creator>Burr Sutter</dc:creator><dc:date>2018-07-18T16:45:49Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/07/18/july-19th-devnation-live-blog-and-social-container-pipeline-master-continuous-integration-continuous-delivery-with-jenkins/</feedburner:origLink></entry><entry><title>Announcing updated Red Hat Developer Studio and Container Development Kit</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/kNvmRL6UM74/" /><category term="Announcement" /><category term="Container Development Kit" /><category term="Developer Tools" /><category term="Red Hat Development Suite" /><category term="Red Hat Enterprise Linux" /><category term="Red Hat JBoss Developer Studio" /><category term="CDK" /><category term="containers" /><category term="developer" /><category term="devstudio" /><category term="Fuse" /><category term="Golang" /><category term="Javascript" /><category term="Node.js" /><category term="OpenShift Container Platform" /><category term="Red Hat Application Migration Toolkit" /><category term="Red Hat OpenShift" /><category term="RHAMT" /><category term="Rust" /><author><name>Bob Davis</name></author><id>https://developers.redhat.com/blog/?p=506577</id><updated>2018-07-18T16:14:21Z</updated><published>2018-07-18T16:14:21Z</published><content type="html">&lt;p&gt;I’m extremely pleased to announce the release of &lt;a href="https://developers.redhat.com/products/cdk/overview/"&gt;Red Hat Container Development Kit (CDK) 3.5&lt;/a&gt; and &lt;a href="https://developers.redhat.com/products/devstudio/overview/"&gt;Red Hat Developer Studio 12&lt;/a&gt;. Whether you are developing traditional or cloud-based applications and microservices, you can run these tools on your Windows, macOS, or Red Hat Enterprise Linux laptop to streamline development:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Red Hat Container Development Kit provides a pre-built container development environment to help you develop container-based applications quickly using Red Hat OpenShift and Kubernetes.&lt;/li&gt; &lt;li&gt;Red Hat Developer Studio (previously named JBoss Developer Studio) provides a desktop IDE with superior support for your entire development lifecycle. It includes a broad set of tooling capabilities and support for multiple programming models and frameworks. Developer Studio provides broad support for working with Red Hat products and technologies including middleware, business automation, and integration, notably Camel and Red Hat Fuse. Developer Studio is based on Eclipse 4.8 (Photon).&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;A number of Red Hat Enterprise Linux (RHEL) development tools have been updated. These include Rust 1.26.1, Go 1.10.2, Cargo 1.26, and Eclipse 4.8 (Photon).&lt;/p&gt; &lt;p&gt;Our goals are to improve usability of our tools for developers, while adding new features that matter most for users of Red Hat platforms and technologies.&lt;/p&gt; &lt;p&gt;Overview of new features:&lt;/p&gt; &lt;p&gt;&lt;span id="more-506577"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Release highlights&lt;/h2&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/products/cdk/overview/"&gt;&lt;b&gt;CDK 3.5&lt;/b&gt;&lt;/a&gt; has been updated to include the following updates:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The latest Red Hat OpenShift Container Platform is included, and it can be updated to newly released versions as they become available by using the &lt;code&gt;minishift start --ocp-tag &amp;#60;version&amp;#62;&lt;/code&gt; command.&lt;/li&gt; &lt;li&gt;You can &lt;a href="https://docs.openshift.org/latest/minishift/using/run-against-an-existing-machine.html"&gt;run the CDK against an existing RHEL 7 remote machine&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;SSHFS is the default method for sharing folders on your host machine with the container environment running inside of the VM.&lt;/li&gt; &lt;li&gt;A &lt;a href="https://docs.openshift.org/latest/minishift/using/experimental-features.html#local-dns-server"&gt;local DNS server&lt;/a&gt; is included to reduce dependency on nip.io and to more fully enable disconnected work.&lt;/li&gt; &lt;li&gt;CDK 3.5 is based on Minishift 1.21.0.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/products/devstudio/overview/"&gt;&lt;b&gt;Red Hat Developer Studio&lt;/b&gt;&lt;/a&gt;&lt;b&gt; 12&lt;/b&gt; has been updated to the latest &lt;a href="https://www.eclipse.org/eclipse/news/4.8/"&gt;Eclipse Photon&lt;/a&gt; release. It supports the CDK 3.5 server adapter and the Red Hat OpenShift.io login provider. This release supports developing apps in Java 9 and 10. As always, it runs on Linux, as well as Windows and macOS.&lt;/p&gt; &lt;p&gt;Additionally, Red Hat Developer Studio Central Plugins have been updated to include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Red Hat Fuse Tooling 11&lt;/li&gt; &lt;li&gt;Red Hat Application Migration Toolkit 4.1&lt;/li&gt; &lt;li&gt;CDK 3.5 server adapter&lt;/li&gt; &lt;li&gt;WildFly 13 support&lt;/li&gt; &lt;li&gt;OpenShift SpringBoot-enhanced support&lt;/li&gt; &lt;li&gt;&lt;a href="https://issues.jboss.org/browse/JBIDE-26065"&gt;Connector&lt;/a&gt; for &lt;a href="http://www.nodeclipse.org/updates/"&gt;Nodeclipse&lt;/a&gt; to support Node.js&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;See Jeff Maury&amp;#8217;s article &lt;a href="https://developers.redhat.com/blog/2018/07/18/announcing-devstudio-12-jboss-tools-46/"&gt;&lt;em&gt;Announcing Red Hat Developer Studio 12 and JBoss Tools 4.6&lt;/em&gt;&lt;/a&gt; on the Red Hat Developer blog. Plugin information is available in the &lt;a href="https://tools.jboss.org/documentation/whatsnew/jbosstools/4.6.0.Final.html"&gt;JBoss Tools documentation&lt;/a&gt;. Eclipse Photon information is available at &lt;a href="https://jaxenter.com/eclipse-photon-is-out-146242.html"&gt;JAXenter&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;Updates to Red Hat Enterprise Linux tools&lt;/h2&gt; &lt;p&gt;The Go language packages in Go Toolset have been updated from version 1.8.7 to 1.10.2. This release fixes some recently discovered security issues. Notable changes include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The results of builds and test runs are now cached, improving the performance of these actions.&lt;/li&gt; &lt;li&gt;Concurrent compilation of functions in packages has been added.&lt;/li&gt; &lt;li&gt;Type aliases have been added to the Go programming language. To create a type alias, use this format: &lt;code&gt;type B = A&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;The math/bits package for bit counting and manipulation of unsigned integer types has been added to the Go standard library.&lt;/li&gt; &lt;li&gt;The &lt;code&gt;sync.Map&lt;/code&gt; type for concurrent access has been added.&lt;/li&gt; &lt;li&gt;The &lt;code&gt;testing.B.helper()&lt;/code&gt; and &lt;code&gt;testing.T.helper()&lt;/code&gt; functions have been added to enable marking of test helper functions.&lt;/li&gt; &lt;li&gt;The time tracked by the &lt;code&gt;Time&lt;/code&gt; type from the &lt;code&gt;time&lt;/code&gt; package is now transparently always monotonic.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Rust has been updated from version 1.25.0 to 1.26.2. Notable changes include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The ability has been added to describe a type with the &lt;code&gt;impl Trait&lt;/code&gt; construct without giving the type name. This construct is useful for returning unnamed types in situations where the actual type is not known, such as with closures, or where the type’s implementation should stay private. Situations where a type must be supplied in multiple positions in a statement still require type parameters.&lt;/li&gt; &lt;li&gt;Support for automatic pattern references has been added to the &lt;code&gt;match&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, and other statements. When using patterns to match the inner parts of a referenced object, the compiler can now automatically dereference the object and reference the inner parts.&lt;/li&gt; &lt;li&gt;Previously, the &lt;code&gt;main()&lt;/code&gt; function of a Rust program could return only the &lt;code&gt;()&lt;/code&gt; unit type. Rust has been extended to allow returning a value of the &lt;code&gt;Result&lt;/code&gt; type from &lt;code&gt;main()&lt;/code&gt;, such as &lt;code&gt;Result&amp;#60;(), E&amp;#62;&lt;/code&gt;, and to handle the error values supplied this way.&lt;/li&gt; &lt;li&gt;Inclusive ranges have been added. To specify a range that includes the last specified value, use &lt;code&gt;a..=b&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Support for slice patterns has been added to the &lt;code&gt;match&lt;/code&gt; statement.&lt;/li&gt; &lt;li&gt;128-bit integer types i128 and u128 have been added.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Additional Red Hat Enterprise Linux tool updates include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The &lt;code&gt;cargo&lt;/code&gt; tool has been updated from version 0.26.0 to 1.26.0.&lt;/li&gt; &lt;li&gt;The &lt;code&gt;cargo-vendor&lt;/code&gt; tool has been updated from version 0.1.13 to 0.1.15.&lt;/li&gt; &lt;li&gt;Rust Language Server (RLS) version 0.126.0 has been added to Red Hat Developer Tools. This tool enables integration of Rust with integrated development environments. RLS is provided by the &lt;code&gt;rust-toolset-7-rls-preview&lt;/code&gt; package.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;More information on these tools and others is available &lt;a href="https://developers.redhat.com/products/clang-llvm-go-rust/overview/"&gt;in our documentation.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;As always, I encourage you to download and try out these new tools, tell your friends, and supply us with any feedback you have. Many thanks to the extended Red Hat Developer Tools and Program teams who, once again, delivered an on-time release on our 12-week cadence.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F18%2Fannouncing-updated-cdk-devstudio%2F&amp;#38;linkname=Announcing%20updated%20Red%20Hat%20Developer%20Studio%20and%20Container%20Development%20Kit" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F18%2Fannouncing-updated-cdk-devstudio%2F&amp;#38;linkname=Announcing%20updated%20Red%20Hat%20Developer%20Studio%20and%20Container%20Development%20Kit" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F18%2Fannouncing-updated-cdk-devstudio%2F&amp;#38;linkname=Announcing%20updated%20Red%20Hat%20Developer%20Studio%20and%20Container%20Development%20Kit" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F18%2Fannouncing-updated-cdk-devstudio%2F&amp;#38;linkname=Announcing%20updated%20Red%20Hat%20Developer%20Studio%20and%20Container%20Development%20Kit" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F18%2Fannouncing-updated-cdk-devstudio%2F&amp;#38;linkname=Announcing%20updated%20Red%20Hat%20Developer%20Studio%20and%20Container%20Development%20Kit" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F18%2Fannouncing-updated-cdk-devstudio%2F&amp;#38;linkname=Announcing%20updated%20Red%20Hat%20Developer%20Studio%20and%20Container%20Development%20Kit" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F18%2Fannouncing-updated-cdk-devstudio%2F&amp;#38;linkname=Announcing%20updated%20Red%20Hat%20Developer%20Studio%20and%20Container%20Development%20Kit" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F18%2Fannouncing-updated-cdk-devstudio%2F&amp;#38;linkname=Announcing%20updated%20Red%20Hat%20Developer%20Studio%20and%20Container%20Development%20Kit" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F18%2Fannouncing-updated-cdk-devstudio%2F&amp;#38;title=Announcing%20updated%20Red%20Hat%20Developer%20Studio%20and%20Container%20Development%20Kit" data-a2a-url="https://developers.redhat.com/blog/2018/07/18/announcing-updated-cdk-devstudio/" data-a2a-title="Announcing updated Red Hat Developer Studio and Container Development Kit"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/18/announcing-updated-cdk-devstudio/"&gt;Announcing updated Red Hat Developer Studio and Container Development Kit&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/kNvmRL6UM74" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;I’m extremely pleased to announce the release of Red Hat Container Development Kit (CDK) 3.5 and Red Hat Developer Studio 12. Whether you are developing traditional or cloud-based applications and microservices, you can run these tools on your Windows, macOS, or Red Hat Enterprise Linux laptop to streamline development: Red Hat Container Development Kit provides [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/18/announcing-updated-cdk-devstudio/"&gt;Announcing updated Red Hat Developer Studio and Container Development Kit&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/07/18/announcing-updated-cdk-devstudio/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">506577</post-id><dc:creator>Bob Davis</dc:creator><dc:date>2018-07-18T16:14:21Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/07/18/announcing-updated-cdk-devstudio/</feedburner:origLink></entry></feed>
